define("DS/DELWKODicoServices/DELWKOCustoXmlUtils",["UWA/Core"],function(e){"use strict";return function(){var t=[],i=function(t,i,n){var r,s,o,c=t.split("."),u={},a={},p={},f=function(t,n){var r,s=[];if(!e.is(s[i])){for(r=0;r<n.length;++r){if(!e.is(t[n[r]])){t=null;break}t=t[n[r]]}if(e.is(t))if(s[i]={},"array"===e.typeOf(t))for(r=0;r<t.length;++r)s[i][t[r][i]]=t[r];else"object"===e.typeOf(t)&&(s[i][t[i]]=t)}return s[i]};if(e.is(n))if("array"===e.typeOf(n[c[0]]))for(o=0;o<n[c[0]].length;o++)a=n[c[0]][o],s=t.indexOf("."),r=(r=t.substring(s+1,t.length)).split("."),e.is(a[r],"array")?(u=f(a,r),e.merge(p,u)):p=f(a=n,c);else p=f(a=n,c);return p};return{retrieveAttributesInfoFromXml:function(n){var r,s,o,c,u,a,p,f,y,d=function(i){var n,r,s=["reference","instance"];for(n in r=function(e){var i;i=n.split("."),function(e){var i,n;if(e.dicoType&&e.attribute)if(t.length<=0)t.push({type:e.dicoType,attributes:[e.attribute]});else{for(i=0;i<t.length;i++){if(e.dicoType===t[i].type){-1===t[i].attributes.indexOf(e.attribute)&&t[i].attributes.push(e.attribute),n=!0;break}n=!1}!1===n&&t.push({type:e.dicoType,attributes:[e.attribute]})}}({attribute:s.indexOf(i[i.length-1])>-1?i[i.length-2]:i[i.length-1],dicoType:e})},i)if(Object.prototype.hasOwnProperty.call(i,n)&&i[n]&&i[n].dicoType){const t=i[n].dicoType;e.is(t,"array")?t.forEach(function(e){const t=e.dicoType;r(t)}):r(t)}};if(e.is(n)){if(e.is(n.uiCusto,"array")&&n.uiCusto.forEach(function(t){e.is(t)&&(d(i("Config.Columns.Column","dataIndex",t)),d(i("Config.Label","dataIndex",t)))}),e.is(n.insertFormCusto))for(a in c=n.insertFormCusto,u=i("AttributesDescriptionList.Type","name",c))u.hasOwnProperty(a)&&d(i("Section.Attribute","name",u[a]));if(e.is(n.editFormCusto))for(o in r=n.editFormCusto,s=i("AttributesDescriptionList.Type","name",r))s.hasOwnProperty(o)&&d(i("Attribute","name",s[o]));if(e.is(n.createWorkOrderFromProcessCusto))for(a in c=n.createWorkOrderFromProcessCusto,u=i("AttributesDescriptionList.Type","name",c))u.hasOwnProperty(a)&&d(i("Section.Attribute","name",u[a]));if(e.is(n.graphViewCusto)&&(p=n.graphViewCusto).Config.Preferences.BOMView.Content.Type)for(f=p.Config.Preferences.BOMView.Content.Type,y=0;y<f.length;y++)d(i("Row","dataIndex",f[y]));return t}}}}}),define("DS/DELWKODicoServices/DELWKODicoUtils",["UWA/Core","UWA/Class","DS/DELPPWWebServices/WebserviceUtils","DS/DELPPWDicoServices/ModelConfigExt","DS/DELPPWDicoServices/AttributeConfigExt","DS/DELPPWResourceServices/ResourceUtils","DS/DELWKODicoServices/DELWKOCustoXmlUtils","text!DS/DELPPWDicoServices/assets/json/ReadOnlyTypes.json"],function(e,t,i,n,r,s,o,c){"use strict";var u=t.singleton(n,r,{name:"DELWKODicoUtils",_modelAttrsJSON:[],_modelTypeConfig:{},_typeHierarchy:{},_readOnlyTypes:null,_acceptedPPRTypesForActions:null,_acceptedBaseTypesForActions:null,init:function(t){var i,n,r=this;if(this._readOnlyTypes=new Set(JSON.parse(c)),t=t||{},!e.is(t.modelRelationsXML)||!e.is(t.modelCustomRelationsXML))throw new Error("modelTypesPath or modelRelationsXML or modelCustomRelationsXML options not defined");r.options=t,(i=!!e.is(t.acceptedPPRTypesForActionsFilePath)&&t.acceptedPPRTypesForActionsFilePath)&&require(["text!"+i],function(t){e.is(t)?r._acceptedPPRTypesForActions=e.is(t,"string")?e.Json.decode(t):t:e.getLogger().debug("Accepted Types for DnD mapping is not defined.")}),(n=!!e.is(t.acceptedBaseTypesForActionsFilePath)&&t.acceptedBaseTypesForActionsFilePath)&&require(["text!"+n],function(t){e.is(t)?r._acceptedBaseTypesForActions=e.is(t,"string")?e.Json.decode(t):t:e.getLogger().debug("Accepted base types are not defined.")})},setup:function(t,i){var n=this.options.modelTypesPath||"DS/DELWKODicoServices/assets/json/ModelTypes.json";require(["text!"+n],function(n){u._modelAttrsJSON=u._retrieveAttributesInfo(),u._modelTypeConfig=e.Json.decode(n),u._initPromiseExec(t,i)},function(e){i(e)})},_retrieveAttributesInfo:function(){var e;return e={uiCusto:[i.getXMLValues("CAPRESOURCE.columnConfigPath"),i.getXMLValues("ROUTINGS.columnConfigPath"),i.getXMLValues("RESOURCE.columnConfigPath"),i.getXMLValues("MANUFACTURING.columnConfigPath"),i.getXMLValues("MBOM.columnConfigPath"),i.getXMLValues("EBOM.columnConfigPath"),i.getXMLValues("ORIGIN.columnConfigPath"),i.getXMLValues("ALTERNATES_AND_SUBSTITUTES.columnConfigPath"),i.getXMLValues("ALTERNATE.columnConfigPath"),i.getXMLValues("RESULTING_PRODUCT_VIEW.columnConfigPath"),i.getXMLValues("AUXILIARY.columnConfigPath")],insertFormCusto:i.getXMLValues("insertFormAttributeXML"),createWorkOrderFromProcessCusto:i.getXMLValues("createWorkOrderFromProcessFormAttributeXML"),editFormCusto:i.getXMLValues("editFormAttributesXML"),graphViewCusto:i.getXMLValues("MBOM.bomViewXML")},(new o).retrieveAttributesInfoFromXml(e)},_retrieveAttrMaskInfoForPPRTypes:function(e,t){var i=["PROCESS","RESOURCE","PRODUCT","PART","SYSTEM","OPERATION","WORKORDER"],n=[];i.indexOf("PROCESS")>=0&&n.push(new Promise(this._retrieveAttrMaskInfoForProcessTypes.bind(this))),i.indexOf("RESOURCE")>=0&&n.push(new Promise(this._retrieveAttrMaskInfoForResourceTypes.bind(this))),i.indexOf("PRODUCT")>=0&&n.push(new Promise(this._retrieveAttrMaskInfoForProductTypes.bind(this))),i.indexOf("PART")>=0&&n.push(new Promise(this._retrieveAttrMaskInfoForPartTypes.bind(this))),i.indexOf("SYSTEM")>=0&&n.push(new Promise(this._retrieveAttrMaskInfoForSystemTypes.bind(this))),i.indexOf("OPERATION")>=0&&n.push(new Promise(this._retrieveAttrMaskInfoForOperationTypes.bind(this))),i.indexOf("WORKORDER")>=0&&n.push(new Promise(this._retrieveAttrMaskInfoForWorkOrderTypes.bind(this))),Promise.all(n).then(function(){e()},function(e){t(e)})},_retrieveAttrMaskInfoForWorkOrderTypes:function(e,t){this.getAttributeMaskInfoOfType("WORKORDER",e,t)},_initPromiseExec:function(e,t){var i=this,n=[new Promise(u._retrieveRefDicoType.bind(i)),new Promise(u._retrieveInstDicoType.bind(i)),new Promise(u._retrieveDocDicoType.bind(i)),new Promise(u._retrieveResourceType.bind(i))];Promise.all(n).then(function(){new Promise(u._retrieveModelCustomRelations.bind(i)).then(function(){u._initPromiseExec2(e,t)},function(e){t(e)})},function(e){t(e)})},_initPromiseExec2:function(e,t){var i=[new Promise(u._retrieveModelCustomRelations.bind(this)),new Promise(u._retrieveDimensions.bind(this)),new Promise(u._retrievePPRTypes.bind(this)),new Promise(u._retrieveModelRelations.bind(this)),new Promise(u._retrieveDicoAttributeInfo.bind(this)),new Promise(u._retrieveAttrMaskInfoForPPRTypes.bind(this)),new Promise(u._retrieveSharedIconPath.bind(this))];"ENXENG_AP"!==widget.getValue("appId")&&"DELWKB_AP"!==widget.getValue("appId")&&i.push(new Promise(u._retrieveValidChildTypes.bind(this))),Promise.all(i).then(function(){e()},function(e){t(e)})},_retrieveSharedIconPath:function(t,n){var r=s.getIconNames();e.is(r,"array")&&r.length>0?i.webServiceRequest({url:"dsmfg/private/V0/invoke/getSharedIconPath",method:"POST",data:JSON.stringify(r),onComplete:function(e){s.setSharedIconPath(e),t()},onFailure:n,onTimeout:n}):t()},_retrieveDimensions:function(e,t){i.webServiceRequest({url:"dictionary/dimensions",method:"GET",onComplete:function(t){s.addDimensions(t.results),e()},onFailure:t,onTimeout:t})},_retrieveDicoType:function(t,n,r){var o=this;i.webServiceRequest({url:"dictionary/getTypeInfo?parentInfo=true",method:"POST",data:JSON.stringify(t),onComplete:function(t){n(),Object.keys(t).forEach(function(i){for(var n=[],r=e.is(t[i].parent)?t[i].parent:null;null!==r;)n.push(r),r=e.is(t[r].parent)?t[r].parent:null;n.length>0&&(n.reverse(),-1!==o.getReferenceTypes().indexOf(n[0])?o._modelTypeConfig.reference.types.push(i):-1!==o.getInstanceTypes().indexOf(n[0])&&o._modelTypeConfig.instance.types.push(i),-1!==o.getDocumentTypes().indexOf(n[0])&&o._modelTypeConfig.document.types.push(i),e.is(t[n[0]].derivedTypes,"array")||(t[n[0]].derivedTypes=[]),t[n[0]].derivedTypes.push(i)),t[i].inheritanceChain=n}),s.addIcons(t),o._typeHierarchy=e.merge(o._typeHierarchy,t)},onFailure:r,onTimeout:r})},_retrieveRefDicoType:function(e,t){this._retrieveDicoType(this.getReferenceTypes(),e,t)},_retrieveInstDicoType:function(e,t){this._retrieveDicoType(this.getInstanceTypes(),e,t)},_retrieveDocDicoType:function(e,t){this._retrieveDicoType(this.getDocumentTypes(),e,t)},_retrieveResourceType:function(e,t){var n=this;i.webServiceRequest({url:"dictionary/getTypeInfo",method:"POST",data:JSON.stringify(["Resource"]),onComplete:function(t){var i=Object.keys(t).filter(function(e){return"Resource"!==e});t.Resource.derivedTypes=i,t.Resource.inheritanceChain=[],n._typeHierarchy.Resource=t.Resource,e()},onFailure:t,onTimeout:t})},getAcceptedPPRTypesForActions:function(){return this._acceptedPPRTypesForActions},getAcceptedBaseTypesForActions:function(){return this._acceptedBaseTypesForActions},getParentTypes:function(t){let i=[];return e.is(this._typeHierarchy[t])&&(i=this._typeHierarchy[t].inheritanceChain||[]),i},getReadOnlyTypes:function(){return this._readOnlyTypes},getTypeHierarchy:function(t){return e.is(this._typeHierarchy[t])&&Array.isArray(this._typeHierarchy[t].derivedTypes)?this._typeHierarchy[t].derivedTypes:[]},getTypeInfo:function(t){var i;return e.is(this._typeHierarchy[t])&&(i=this._typeHierarchy[t]),i},getReferenceTypes:function(){return this._modelTypeConfig.reference.types},getInstanceTypes:function(){return this._modelTypeConfig.instance.types},getDocumentTypes:function(){return this._modelTypeConfig.document.types},getConnectionTypes:function(){return this._modelTypeConfig.connection.types},isEntityReference:function(e){return-1!==this.getReferenceTypes().indexOf(e)},isEntityInstance:function(e){return-1!==this.getInstanceTypes().indexOf(e)},isEntityConnection:function(e){return-1!==this.getConnectionTypes().indexOf(e)},isAKindOf:function(t,i){var n=!1,r=e.is(t)?e.is(t,"string")?t:e.is(t.get,"function")?t.get("type"):null:null,s=e.is(i,"string")&&0<i.length?u.getTypeHierarchy(i):null;return e.is(r,"string")&&e.is(i,"string")&&(i===r?n=!0:Array.isArray(s)&&(n=s.some(function(e){return r===e},this))),n}});return u});