define("DS/ENOMadeFromUX/utils/PostSearchAction",["UWA/Controls/Abstract","DS/XSRCommonComponents/utils/XSRSearch","DS/XSRCommonComponents/utils/RMCommonServiceProvider","DS/XSRCommonComponents/utils/ItemServiceProvider","DS/XSRCommonComponents/createform/view/TableForm","DS/XSRCommonComponents/createform/control/BOMCreateModel","DS/XSRCommonComponents/utils/TypeUtils","DS/XSRCommonComponents/utils/Constants","DS/XSRCommonComponents/utils/Notification","DS/ENOMadeFromUX/service/MBMFServiceProvider","DS/XSRCommonComponents/utils/XSRMask","i18n!DS/XSRCommonComponents/assets/nls/XSRCommonComponents","i18n!DS/ENOMadeFromUX/assets/nls/MadeFromUX"],function(e,t,n,o,s,i,r,a,c,l,d,m,M){"use strict";return e.extend({init:function(e){this.appCore=e.appCore,this.currentTabKey=e.currentTabKey,this.container=e.container,this.bomGrid=e.bomGrid,this.isReferenceView=e.isReferenceView,this.isTileView=e.isTileView,this.specModel=e.specModel,this.modelEvents=e.modelEvents,this.isMBMF=e.isMBMF,this.bomGridCombos=[],this.appId=e.appId,this.dataModelMap=null,this.parentHasCoreMat=!1,this.subsList=[],this.subscribeEvents()},subscribeEvents(){let e=this;e.subsList.push(e.modelEvents.subscribe({event:"postDeleteDuplicate"},t=>{if(t&&t.target){let n=t.target._treeDocument.getChildren();n.forEach(t=>{let o=t.options.grid;e.connectMaterialCheck(o,n.length)})}}))},triggerSearch(e){let i=this,c=[a.TYPE_VPMREFERENCE];e&&e.searchOnlyRawM&&(c=[a.RAW_MATERIAL_TYPE]);let l={allowedTypes:c,role:"",subType:"",criteria:e.query,precondition:'NOT [current]:"OBSOLETE"',columns:["ds6wg:raw_material.v_dimensiontype","flattenedtaxonomies"],in_apps_callback:function(e){let t,a={appCore:i.appCore},c=i.bomGrid.getTreeDocument().getSelectedNodes();if(c&&0===c.length?(a.parentId=i.specModel.getID(),a.parentTitle=i.specModel.getLabel(),t=i.bomGrid.getTreeDocument(),i.parentHasCoreMat=i.specModel.hasMadeOf?i.specModel.hasMadeOf():i.parentHasCoreMat):c&&1===c.length&&(a.parentId=c[0].getID(),a.parentTitle=c[0].getLabel(),t=c[0],i.parentHasCoreMat=!!c[0].getCoreMatId()),a.createCloseAction=function(e){i.createMBMF(e,a.parentId)},i.preapreComboFromGrid(t),a.bomGridCombos=i.bomGridCombos,a.container=i.container,e&&e.length>0){d.maskLoader(i.container,"Loading...");let t=[],c=[];e.forEach(function(e){c.push(e.id),r.isRawMaterial(e["ds6w:type"])&&(e["ds6wg:raw_material.v_dimensiontype_value"]||t.push(e.id))});let l=[];t.forEach(e=>{let t=new Promise((t,o)=>{(new n).getUOMTypes(e).then(function(n){let o={};o[e]=n.result.applicableUOMTypes[0].dimension,t(o)})});l.push(t)}),Promise.all(l).then(async function(t){let n=new Map,r=new Map;if(t.forEach(function(e){n.set(Object.keys(e)[0],Object.values(e)[0])}),0!=c.length){let e={references:c,with_partials:!0};(r=await(new o).fetchCoreMatDetails(e))||(r=new Map)}let l=i.createProdGridFields(e,n,r);i.tblFrom=new s(a).loadData(l),d.unmaskLoader(i.container)})}},excludeList:e.excludeList||[]};new t(l).launchSearch(l)},async preapreComboFromGrid(e){let t=this,n=e.getVisibleChildren?e.getVisibleChildren():e.getChildren();if(n.forEach(e=>{let n=e.getMBMFReferenceName()||"";t.bomGridCombos.push(`${e.getID()}_${n}`)}),e.getVisibleChildren&&0==n.length){let e=await(new l).getReferenceMap(parentId);e.success&&Object.keys(e.result.MadeFromConnections).forEach(n=>{e.result.MadeFromConnections[n]&&e.result.MadeFromConnections[n].forEach(e=>{t.bomGridCombos.push(`${n}_${e}`)})})}},createProdGridFields(e,t,n){let o=this,s=[];return Array.isArray(e)?(e.forEach(r=>{let a=(new i).setModel(r);a.dimensionDB&&""!=a.dimensionDB||!t.has(a.id)||(a.dimension=t.get(a.id).nlsLabel,a.dimensionDB=t.get(a.id).dbName),n.has(a.id)&&(a.coreMaterial=[n.get(a.id)]),a.isMBMF=o.isMBMF,o.connectMaterialCheck(a,e.length),s.push(a)}),s):s},connectMaterialCheck(e,t){(t+=this.bomGridCombos.length)>1&&(e.connectCM=!1),this.parentHasCoreMat||1!=t||1!=e.coreMaterial.length?0==e.coreMaterial.length?(e.canConnectCM=!1,e.connectCM_Msg=m.childCMMsg):(e.canConnectCM=!1,e.connectCM_Msg=m.connectMultiCMMsg):e.canConnectCM=!0},createMBMF(e,t){let n=this;if(Array.isArray(e)&&0==e.length)return;let o=[];n.dataModelMap=new Map,e.forEach(e=>{let t=e.options.grid;n.dataModelMap.set(t.id,t);let s=t.dataToSubmit();"EA"===t.uomDB&&t.quantity>0?o.push(...Array(t.quantity).fill(s)):o.push(s)}),(new l).connectMBMFItem(o,t).then(e=>{if(e&&200===e.statusCode){if(e.success&&e.result.MadeFromConnections.length>0){let o=e.result.MadeFromConnections,s=[],i=!0;o.forEach(e=>{if(e.success&&e.connectionPID){let o=n.dataModelMap.get(e.makeFromPID);o.relationID=e.connectionPID,o.parentID=t,s.push(o.getMbmfJsonForEIM(e)),n.modelEvents.publish({event:"add_MBMF_nodes",data:{resp:s,success:!0}}),i&&(c.displayNotification({eventID:"success",msg:M.Success_ConnectMBMF}),i=!1)}else!1===e.success&&c.displayNotification({eventID:"error",msg:e.message||M.Error_ConnectMBMF})})}}else c.displayNotification({eventID:"error",msg:"Service failed"})})}})});