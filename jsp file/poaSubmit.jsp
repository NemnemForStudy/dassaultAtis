<%@page import="com.matrixone.apps.domain.util.EnoviaResourceBundle"%>
<%@page import="java.util.Iterator"%>
<%@page import="matrix.util.StringList"%>
<%@page import="com.matrixone.apps.domain.util.FrameworkUtil"%>
<%@page import="com.matrixone.apps.domain.util.MqlUtil"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.util.List"%>
<%@page import="com.matrixone.servlet.MultipartRequest"%>
<%@page import="java.util.Enumeration"%>
<%@page import="java.io.File"%>
<%@page import="org.apache.commons.fileupload.FileItem"%>
<%@page import="com.matrixone.apps.domain.util.ContextUtil"%>
<%@page import="com.matrixone.apps.common.util.DocumentUtil"%>
<%@page import="com.matrixone.apps.common.CommonDocument"%>
<%@page import="com.matrixone.apps.domain.DomainRelationship"%>
<%@page import="com.matrixone.apps.framework.ui.UINavigatorUtil"%>
<%@page import="com.matrixone.apps.domain.DomainObject"%>
<%@page import="com.matrixone.servlet.Framework"%>
<%@page import="matrix.db.Context"%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%
Context context = Framework.getContext(session);

String savePath = context.createWorkspace();
String path = "C:\\workspace\\eclipse\\project\\3dspace\\web\\common\\video";
//4. 여기서도 parentOID를 찾아주면 이제 드디어 뜨게 된다.
int sizeLimit = 1024*1024*500;
MultipartRequest multi = new MultipartRequest(request, savePath, sizeLimit, "utf-8");

// 5. multi를 사용할때는 request.getParameter가 아닌 multi.getParameter로 사용해줘야함.
String parentOID = multi.getParameter("parentOID");
// Enumeration을 사용하지 않으면 데이터를 받아오지 못하더라
Enumeration<String> files = multi.getFileNames();
// fileNameList를 받아오는 List 생성
List<String> fileNamesList = new ArrayList<>();

// hasMoreElements는 Iterator에서 제공되는 메서드이고
// 이터레이터가 더 많은 요소를 가지고 있는지 여부를 확인하는 데 사용.
// 단 Enumeration에서도 사용이 가능하다.
while (files.hasMoreElements()) {
	// nextElement()를 사용해 Enumeration에서 요소를 반환하는 메서드이다.
	// 다음 요소를 가져옴. hasMoreElements를 사용해 요소 남아있는지 확인
    String paramName = (String)files.nextElement();
    String fileName = multi.getFilesystemName(paramName); // 파일 이름 가져오기
    
    // fileName이 null이 아닌 경우에만 파일을 처리
    if (fileName != null) {
        fileNamesList.add(fileName); // 파일 이름을 리스트에 저장
    }
}

// 파일 이름 리스트를 역순으로 출력
// 파일이 역순으로 붙었기 때문에 한번 더 for문으로 역순 처리 해줌
for (int i = fileNamesList.size() - 1; i >= 0; i--) {
	// get(i)로 fileName을 각각 가져옴
    String fileName = fileNamesList.get(i);
    String filePath = savePath + "/" + fileName;
    // filePath를 File메서드를 사용해 넣어줌
    File file = new File(filePath);
    
    // name을 만들어서 DomainObject에 getAutoGeneratedName을 사용해서
    // DOC-***** 라는 name을 만들어냄
    String name = DomainObject.getAutoGeneratedName(context, "type_Document", "");
    DomainObject cObj = new DomainObject();
    // createObject로 Document를 만들어냄.
    // context.getVault().getName() <- 이 회사 에서 사용하는 eService ~ 이런거
    cObj.createObject(context, "Document", name, "1", "Document Release", context.getVault().getName());

    // parentOID를 가져와서
    DomainObject pId = new DomainObject(parentOID);
    // relationship으로 connect를 사용(parentOID와 만든 cObj id를 connect 시켜줌)
    DomainRelationship connectionId = DomainRelationship.connect(context, pId, "samPOARel", cObj);

    // getObjectId를 사용해 id를 가져옴
    String id = cObj.getObjectId(context);
    // CommonDocument에서 새 CommonDocument를 만들어줌
    CommonDocument doc = new CommonDocument(id);
    // createVersion으로 name, fileName을 넣어줌으로써 새 Version을 만들어준다.
    doc.createVersion(context, name, fileName, null);

    cObj.checkinFile(context, false, true, "", "generic", file.getName(), savePath);
    
    // fileName을 가져왔으면 setAttribute로 Attribute[Title]이니 Title에 박아주자.
    cObj.setAttributeValue(context, "Title", fileName);
    cObj.setAttributeValue(context, "poaPath", path);
}

%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
<script>

// 페이지 새로고침되는 코드인듯.
var hrefTemp = parent.window.getWindowOpener().document.location.href.replace("&persist=true","");
parent.window.getWindowOpener().document.location.href = hrefTemp;

// 아래는 창이 꺼지는 거.
parent.window.closeWindow();
getTopWindow().getWindowOpener().getTopWindow().refreshShortcut();
</script>
</body>
</html>